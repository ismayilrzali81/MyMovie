"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[256,273],{273:(e,t,a)=>{a.r(t),a.d(t,{about_movie:()=>r,getMoviesInfo:()=>n});var i=a(669),s=a.n(i);const n=(e,t)=>{let a=e.getAttribute("data-id");s().get(`http://www.omdbapi.com/?apikey=8d9cfe3d&i=${a}`).then((async e=>{let i=await s().get(`https://imdb-api.com/en/API/FullCast/k_7xs694cx/${a}`),n=i.data.actors.map((e=>`<div class="actor">\n                         <div class="actor_photo">\n                         <img loading='lazy' src="${e.image}"  alt="mini_poster">\n                         </div>\n                         <div class="actor_name">${e.name}</div>\n                         <div class="actor_character">${e.asCharacter}</div>\n                        </div>`)),r=i.data.directors.items.map((e=>`<div class="item">\n                            <div class="name">${e.name}</div>\n                            <div class="role">${i.data.directors.job}</div>\n                        </div>`)),c=i.data.writers.items.map((e=>`<div class="item">\n                        <div class="name">${e.name}</div>\n                        <div class="role">${i.data.writers.job}</div>\n                        </div>`));t.innerHTML=`\n            <div class="movie_wrapper">\n                <div class="photo_wrapper">\n                    <img loading='lazy' src="${e.data.Poster}"  alt="poster">                        \n                </div>\n\n                <div class="info_wrapper">\n                    <div class="header">${e.data.Title}</div>\n                    <div class="tags">\n                        <div class="tag">${e.data.Genre}</div>\n                        <div class="tag">${e.data.Year}</div>\n                        <div class="tag">${e.data.Runtime}</div>\n                        <div class="tag trailer" data-id=${a}>Play Trailer</div>\n                    </div>\n\n                    <div class="ratings_imdb"><span>${e.data.imdbRating}</span>/10</div>    \n                    <div class="text_header">Overview</div>\n                    <div class="text">${e.data.Plot}</div>\n                    <div class="director_writer">  \n                            ${r}\n                            ${c}\n                    </div>\n                    <div class="line"></div>\n                    <div class="actors">\n                        <div class="left_btn"></div>\n                        <div class="right_btn"></div>\n                        <div class="actors_list">\n                        <div class="actors_wrapper" data-position=0>${n}</div> \n                        </div>             \n                    </div>\n                </div>\n                <div class="ext_btn">\n                    <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">\n                        <path d="M19.3333 2.54675L17.4533 0.666748L9.99996 8.12008L2.54663 0.666748L0.666626 2.54675L8.11996 10.0001L0.666626 17.4534L2.54663 19.3334L9.99996 11.8801L17.4533 19.3334L19.3333 17.4534L11.88 10.0001L19.3333 2.54675Z" fill="black"/>\n                    </svg>\n                </div>\n            <div/>`,t.classList.add("about_movie_active")})),t.addEventListener("click",(async e=>{if((e.target.classList.contains("ext_btn")||"svg"==e.target.tagName||"path"==e.target.tagName)&&t.classList.remove("about_movie_active"),"tag trailer"==e.target.classList.value){const t=await s().get(`https://imdb-api.com/en/API/YouTubeTrailer/k_uy3lv974/${e.target.dataset.id}`);if(document.querySelector("#player")){document.querySelector("#player").remove();let e=document.createElement("div");e.id="player",document.querySelector(".video_wrapper").append(e)}new YT.Player("player",{height:"360",width:"640",videoId:`${t.data.videoId}`}),document.querySelector(".video_wrapper").classList.toggle("active")}}))},r=()=>{let e=document.querySelector(".about_movie");document.querySelectorAll("section").forEach(((t,a)=>{0!=a&&4!=a&&t.addEventListener("click",(async t=>{let a=t.target;a.classList.contains("movie_list_item")&&n(a,e),a.parentElement.classList.contains("movie_list_item")&&n(a.parentElement,e),a.parentElement.parentElement.classList.contains("movie_list_item")&&!a.classList.contains("favorite_toggle_btn")&&n(a.parentElement.parentElement,e)}))}))}},256:(e,t,a)=>{a.r(t),a.d(t,{see_more_section:()=>c});var i=a(669),s=a.n(i),n=a(273),r=a(880);const c=async(e,t,a)=>{const i=document.querySelector(".see_more_section"),c=document.querySelectorAll("section"),l=document.querySelector(t),o=i.querySelector("h2"),d=document.querySelector(".about_movie"),v=await s().get(e),m=document.querySelectorAll(".see_more"),p=(e,t,a,i,s,n)=>{e.innerText=i,t(s,n,!1,!1,v),a.style.cssText=" opacity: 1; transform: scale(1);"};m.forEach(((s,n)=>{s.addEventListener("click",(()=>{let s=c[n+1].querySelector("h2").innerText;"Most Popular Movies"==s?p(o,r.oO,i,s,e,t):"Featured Movie"==s&&"none"==document.querySelector(".featured_movie").style.display&&(s=c[n+2].querySelector("h2").innerText,p(o,r.hl,i,s,a,t))}))})),i.querySelector(".ext_btn").addEventListener("click",(()=>{i.style.cssText=" opacity: 0; transform: scale(0);",l.innerHTML=""})),l.addEventListener("click",(e=>{let t=e.target;t.classList.contains("movie_list_item")&&(i.style.cssText=" opacity: 0; transform: scale(0);",l.innerHTML="",(0,n.getMoviesInfo)(t,d)),t.parentElement.classList.contains("movie_list_item")&&(i.style.cssText=" opacity: 0; transform: scale(0);",l.innerHTML="",(0,n.getMoviesInfo)(t.parentElement,d)),t.parentElement.parentElement.classList.contains("movie_list_item")&&!t.classList.contains("favorite_toggle_btn")&&(i.style.cssText=" opacity: 0; transform: scale(0);",l.innerHTML="",(0,n.getMoviesInfo)(t.parentElement.parentElement,d))}))}}}]);