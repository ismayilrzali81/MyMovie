"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[256,273,880],{273:(e,t,a)=>{a.r(t),a.d(t,{about_movie:()=>s,getMoviesInfo:()=>d});var i=a(669),n=a.n(i);const d=(e,t)=>{let a=e.getAttribute("data-id");n().get(`http://www.omdbapi.com/?apikey=8d9cfe3d&i=${a}`).then((async e=>{let i=await n().get(`https://imdb-api.com/en/API/FullCast/k_uy3lv974/${a}`),d=i.data.actors.map((e=>`<div class="actor">\n                         <div class="actor_photo">\n                         <img loading='lazy' src="${e.image}"  alt="mini_poster">\n                         </div>\n                         <div class="actor_name">${e.name}</div>\n                         <div class="actor_character">${e.asCharacter}</div>\n                        </div>`)),s=i.data.directors.items.map((e=>`<div class="item">\n                            <div class="name">${e.name}</div>\n                            <div class="role">${i.data.directors.job}</div>\n                        </div>`)),r=i.data.writers.items.map((e=>`<div class="item">\n                        <div class="name">${e.name}</div>\n                        <div class="role">${i.data.writers.job}</div>\n                        </div>`));t.innerHTML=`\n            <div class="movie_wrapper">\n                <div class="photo_wrapper">\n                    <img loading='lazy' src="${e.data.Poster}"  alt="poster">                        \n                </div>\n\n                <div class="info_wrapper">\n                    <div class="header">${e.data.Title}</div>\n                    <div class="tags">\n                        <div class="tag">${e.data.Genre}</div>\n                        <div class="tag">${e.data.Year}</div>\n                        <div class="tag">${e.data.Runtime}</div>\n                        <div class="tag trailer" data-id=${a}>Play Trailer</div>\n                    </div>\n\n                    <div class="ratings_imdb"><span>${e.data.imdbRating}</span>/10</div>    \n                    <div class="text_header">Overview</div>\n                    <div class="text">${e.data.Plot}</div>\n                    <div class="director_writer">  \n                            ${s}\n                            ${r}\n                    </div>\n                    <div class="line"></div>\n                    <div class="actors">\n                        <div class="left_btn"></div>\n                        <div class="right_btn"></div>\n                        <div class="actors_list">\n                        <div class="actors_wrapper" data-position=0>${d}</div> \n                        </div>             \n                    </div>\n                </div>\n                <div class="ext_btn">\n                    <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">\n                        <path d="M19.3333 2.54675L17.4533 0.666748L9.99996 8.12008L2.54663 0.666748L0.666626 2.54675L8.11996 10.0001L0.666626 17.4534L2.54663 19.3334L9.99996 11.8801L17.4533 19.3334L19.3333 17.4534L11.88 10.0001L19.3333 2.54675Z" fill="black"/>\n                    </svg>\n                </div>\n            <div/>`,t.classList.add("about_movie_active")})),t.addEventListener("click",(async e=>{if((e.target.classList.contains("ext_btn")||"svg"==e.target.tagName||"path"==e.target.tagName)&&t.classList.remove("about_movie_active"),"tag trailer"==e.target.classList.value){const t=await n().get(`https://imdb-api.com/en/API/YouTubeTrailer/k_uy3lv974/${e.target.dataset.id}`);if(document.querySelector("#player")){document.querySelector("#player").remove();let e=document.createElement("div");e.id="player",document.querySelector(".video_wrapper").append(e)}new YT.Player("player",{height:"360",width:"640",videoId:`${t.data.videoId}`}),document.querySelector(".video_wrapper").classList.toggle("active")}}))},s=()=>{let e=document.querySelector(".about_movie");document.querySelectorAll("section").forEach(((t,a)=>{0!=a&&4!=a&&t.addEventListener("click",(async t=>{let a=t.target;a.classList.contains("movie_list_item")&&d(a,e),a.parentElement.classList.contains("movie_list_item")&&d(a.parentElement,e),a.parentElement.parentElement.classList.contains("movie_list_item")&&!a.classList.contains("favorite_toggle_btn")&&d(a.parentElement.parentElement,e)}))}))}},880:(e,t,a)=>{a.r(t),a.d(t,{most_popular:()=>d,movies:()=>r,new_arrival:()=>s});var i=a(669),n=a.n(i);const d=async(e,t,a=!0,i=!1,d)=>{console.log(d);const s=document.querySelector(`${t}`);e:for(let e in d.data.items){let t=d.data.items[e],r=await n().get(`http://www.omdbapi.com/?apikey=8d9cfe3d&i=${t.id}`);if("N/A"!==r.data.imdbRating&&void 0!==r.data.imdbRating&&(s.innerHTML+=`<div class="movie_list_item" data-id="${r.data.imdbID}">\n                                                <div class="photo_wrapper">\n                                                    <img src='${r.data.Poster}' loading="lazy" alt="movie photo">\n                                                   ${a?'<div class="favorite_toggle_btn"></div>':""}\n                                                </div>\n                                \n                                                <div class="year">${r.data.Year}</div>\n                                                <div class="title">${r.data.Title}</div>\n                                                <div class="score">\n                                                    <div class="imdb_score"> <img  class="imdb" alt="imdb">${"N/A"!=r.data.imdbRating&&r.data.imdbRating?r.data.imdbRating:0}/ 10</div>\n                                                </div>\n                                                <div class="genre">${r.data.Genre}</div>\n                                            </div>`,i&&10==e))break e}},s=(e,t)=>{n().get(e).then((e=>{const a=document.querySelector(`${t}`);e.data.items.forEach((async e=>{let t=await n().get(`http://www.omdbapi.com/?apikey=8d9cfe3d&i=${e.id}`);"N/A"!=t.data.imdbRating&&null!=t.data.imdbRating&&(a.innerHTML+=`<div class="movie_list_item" data-id="${t.data.imdbID}">\n                                <div class="photo_wrapper">\n                                    <img src='${t.data.Poster}' loading="lazy" alt="movie photo">\n                                    <div class="favorite_toggle_btn"></div>\n                                </div>\n                \n                                <div class="year">${t.data.Year}</div>\n                                <div class="title">${t.data.Title}</div>\n                                <div class="score">\n                                    <div class="imdb_score"> <img  class="imdb" alt="imdb">${"N/A"!=t.data.imdbRating&&t.data.imdbRating?t.data.imdbRating:0}/ 10</div>\n                                </div>\n                                <div class="genre">${t.data.Genre}</div>\n                            </div>`)}))}))},r=async(e,t,a,i,r,l)=>{document.querySelector(".video_wrapper .video");const o=await n().get(e);d(e,t,!0,!0,o),s(a,i);let c=[];const v=document.querySelector(`${r} div.movie_list`);for(let e=0;e<5;e++){let t=o.data.items[e];const a=await n().get(`https://imdb-api.com/en/API/Trailer/k_7q3vomr1/${t.id}`);c.push({videoId:a.data.videoId}),a.data.thumbnailUrl&&(v.innerHTML+=`<div class="movie_list_item" data-index=${e} >\n                    <div class="photo_wrapper">\n                        <img  alt="movie photo" loading="lazy" src="${a.data.thumbnailUrl}">\n                    </div>\n                    <div class="title">${a.data.fullTitle} Trailer </div>\n                    </div>`)}document.querySelector(r).addEventListener("click",(e=>{let t=e.target;if(t.classList.contains("movie_list_item")){if(document.querySelector(".video_wrapper").classList.toggle("active"),document.querySelector("#player")){document.querySelector("#player").remove();let e=document.createElement("div");e.id="player",document.querySelector(".video_wrapper").append(e)}new YT.Player("player",{height:"360",width:"640",videoId:c[t.dataset.index].videoId})}if(t.parentElement.classList.contains("movie_list_item")){if(document.querySelector(".video_wrapper").classList.toggle("active"),document.querySelector("#player")){document.querySelector("#player").remove();let e=document.createElement("div");e.id="player",document.querySelector(".video_wrapper").append(e)}new YT.Player("player",{height:"360",width:"640",videoId:c[t.parentElement.dataset.index].videoId})}if(t.parentElement.parentElement.classList.contains("movie_list_item")&&!t.classList.contains("favorite_toggle_btn")){if(document.querySelector(".video_wrapper").classList.toggle("active"),document.querySelector("#player")){document.querySelector("#player").remove();let e=document.createElement("div");e.id="player",document.querySelector(".video_wrapper").append(e)}new YT.Player("player",{height:"360",width:"640",videoId:c[t.parentElement.parentElement.dataset.index].videoId})}})),n().get(e).then((async e=>{let t=[];for(let a=0;a<5;a++){let i=e.data.items[a];const d=await n().get(`https://imdb-api.com/en/API/YouTubeTrailer/k_7q3vomr1/${i.id}`);let s=await n().get(`http://www.omdbapi.com/?apikey=8d9cfe3d&i=${i.id}`),r=await(await n().get(`https://www.myapifilms.com/imdb/idIMDB?idIMDB=${i.id}&token=f183f32a-f21f-435a-81ca-2778aad3a1fe`)).data.data.movies[0].urlPoster;t.push({title:i.title,imdbRatings:s.data.imdbRating&&"N/A"!==s.data.imdbRating?s.data.imdbRating:0,poster:r,video:d.data.videoId,content:s.data.Plot})}return t})).then((e=>{const t=document.querySelector(`${l} `);document.querySelectorAll(".movie_toggle li").forEach(((a,i)=>{a.addEventListener("click",(()=>{if(document.querySelector(".header_wrapper").style.cssText=`background: url(${e[i].poster}) \n                center 35% /cover no-repeat`,document.querySelector("iframe#player")){document.querySelector("iframe#player").remove();let e=document.createElement("div");e.id="player",document.querySelector(".video_wrapper").append(e)}new YT.Player("player",{height:"360",width:"640",videoId:`${e[i].video}`}),t.innerHTML=` <div class="container">\n                    <div class="title">${e[i].title}</div>\n                    <div class="score">\n                        <div class="imdb_score"> <img loading="lazy" class="imdb"  alt="imdb">${e[i].imdbRatings||"N/A"==e[i].imdbRatings?e[i].imdbRatings:0} / 10</div>\n                    </div>\n                    <div class="content">${e[i].content}</div>\n                    <button class="watch_trailer"> <img  alt="play">  Watch trailer</button>\n                </div>`}))})),t.innerHTML=` <div class="container">\n            <div class="title">${e[2].title}</div>\n            <div class="score">\n                <div class="imdb_score"> <img class="imdb"  alt="imdb">${e[2].imdbRatings||"N/A"==e[2].imdbRatings?e[2].imdbRatings:0} / 10</div>\n            </div>\n            <div class="content">${e[2].content}</div>\n            <button class="watch_trailer"> <img  alt="play">  Watch trailer</button>\n        </div>`,document.querySelector(".header_wrapper").style.cssText=`background: url(${e[2].poster}) center 35% /cover no-repeat`}))}},256:(e,t,a)=>{a.r(t),a.d(t,{see_more_section:()=>r});var i=a(669),n=a.n(i),d=a(273),s=a(880);const r=async(e,t,a)=>{const i=document.querySelector(".see_more_section"),r=document.querySelectorAll("section"),l=document.querySelector(t),o=i.querySelector("h2"),c=document.querySelector(".about_movie"),v=await n().get(e),m=document.querySelectorAll(".see_more"),p=(e,t,a,i,n,d)=>{e.innerText=i,t(n,d,!1,!1,v),a.style.cssText=" opacity: 1; transform: scale(1);"};m.forEach(((n,d)=>{n.addEventListener("click",(()=>{let n=r[d+1].querySelector("h2").innerText;"Most Popular Movies"==n?p(o,s.most_popular,i,n,e,t):"Featured Movie"==n&&"none"==document.querySelector(".featured_movie").style.display&&(n=r[d+2].querySelector("h2").innerText,p(o,s.new_arrival,i,n,a,t))}))})),i.querySelector(".ext_btn").addEventListener("click",(()=>{i.style.cssText=" opacity: 0; transform: scale(0);",l.innerHTML=""})),l.addEventListener("click",(e=>{let t=e.target;t.classList.contains("movie_list_item")&&(i.style.cssText=" opacity: 0; transform: scale(0);",l.innerHTML="",(0,d.getMoviesInfo)(t,c)),t.parentElement.classList.contains("movie_list_item")&&(i.style.cssText=" opacity: 0; transform: scale(0);",l.innerHTML="",(0,d.getMoviesInfo)(t.parentElement,c)),t.parentElement.parentElement.classList.contains("movie_list_item")&&!t.classList.contains("favorite_toggle_btn")&&(i.style.cssText=" opacity: 0; transform: scale(0);",l.innerHTML="",(0,d.getMoviesInfo)(t.parentElement.parentElement,c))}))}}}]);